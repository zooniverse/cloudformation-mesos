{
  "variables": {
    "docker_version": "1.6.0",
    "mesos_version": "0.22.1",
    "marathon_version": "0.8.1",
    "chronos_version": "2.1.0",
    "cfn_tools_url": "https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz",
    "ami_prefix": "zooniverse"
  },

  "builders": [
    {
      "type": "amazon-ebs",
      "region": "us-east-1",
      "source_ami": "ami-aa968ac2",
      "instance_type": "m3.medium",
      "ssh_username": "ubuntu",
      "ami_name": "{{user `ami_prefix`}}-mesos-{{user `mesos_version`}}-hvm-{{isotime | clean_ami_name}}",
      "ami_description": "Ubuntu 14.04 LTS with Docker and Mesos",
      "ami_regions": ["us-east-1"],
      "ami_groups": "all",
      "tags": {
        "os:distribution": "Ubuntu",
        "os:release": "14.04 LTS",
        "mesos:version": "{{user `mesos_version`}}",
        "marathon:version": "{{user `marathon_version`}}",
        "chronos:version": "{{user `chronos_version`}}"
      }
    }
  ],

  "provisioners": [
    {
      "type": "file",
      "source": "include/",
      "destination": "/tmp/"
    },
    {
      "type": "shell",
      "inline": [
        "# Wait before running the update. If we're too quick, we'll only get a partial package list",
        "sleep 10",
        "sudo apt-get update",
        "sudo apt-get -y install python-setuptools ntp wget curl default-jre libsvn1 unzip",
        "sudo easy_install pip",

        "# Set a TTL for JVM DNS cache",
        "sudo sh -c \"grep '^networkaddress.cache.ttl=' /etc/java-7-openjdk/security/java.security || echo 'networkaddress.cache.ttl=60' >> /etc/java-7-openjdk/security/java.security\"",

        "# Put system configs into place",
        "sudo mv /tmp/limits.conf /etc/security/limits.conf",
        "sudo mv /tmp/sysctld.network.conf /etc/sysctl.d/60-network.conf",
        "sudo mv /tmp/pamd.common-session /etc/pam.d/common-session",
        "sudo mv /tmp/pamd.common-session-noninteractive /etc/pam.d/common-session-noninteractive",

        "# Docker (use Docker repo so we can get recent versions)",
        "sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9",
        "sudo sh -c 'echo deb http://get.docker.com/ubuntu docker main > /etc/apt/sources.list.d/docker.list'",
        "sudo apt-get update",
        "sudo apt-get -y install lxc-docker-{{user `docker_version`}}",
        "sudo mv /tmp/docker.logrotate /etc/logrotate.d/docker",

        "# Install logstash",
        "sudo curl -o /tmp/logstash.tar.gz https://download.elasticsearch.org/logstash/logstash/logstash-1.4.2.tar.gz",
        "sudo mkdir /opt/logstash",
        "sudo tar zxf /tmp/logstash.tar.gz -C /opt/logstash --strip=1",
        "sudo rm -f /tmp/logstash.tgz",
        "sudo /opt/logstash/bin/plugin install contrib",

        "# Install Mesos, Marathon, and Chronos from Mesosphere apt repos",
        "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF",
        "sudo sh -c 'echo deb http://repos.mesosphere.io/ubuntu trusty main > /etc/apt/sources.list.d/mesosphere.list'",
        "sudo apt-get -y update",
        "sudo apt-get -y install mesos={{user `mesos_version`}}* marathon={{user `marathon_version`}}* chronos={{user `chronos_version`}}*",
        "sudo apt-mark hold mesos marathon chronos",

        "# Disable autostarting upstart tasks",
        "echo manual | sudo tee /etc/init/mesos-master.override",
        "echo manual | sudo tee /etc/init/mesos-slave.override",
        "echo manual | sudo tee /etc/init/marathon.override",
        "echo manual | sudo tee /etc/init/chronos.override"
      ]
    },
    {
      "type": "shell",
      "only": ["amazon-ebs"],
      "inline": [
        "# Install CloudFormation bootstrap tools",
        "sudo wget -O /root/aws-cfn-bootstrap-latest.tar.gz {{user `cfn_tools_url`}}",
        "sudo mkdir -p /root/aws-cfn-bootstrap-latest",
        "sudo tar xvfz /root/aws-cfn-bootstrap-latest.tar.gz --strip-components=1 -C /root/aws-cfn-bootstrap-latest",
        "sudo easy_install /root/aws-cfn-bootstrap-latest/",
        "sudo rm -rf /root/aws-cfn-bootstrap-latest /root/aws-cfn-bootstrap-latest.tar.gz"
      ]
    }
  ]
}
